{"remainingRequest":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/thread-loader/dist/cjs.js!/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/babel-loader/lib/index.js!/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/src/components/mixer/Mixer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/src/components/mixer/Mixer.vue","mtime":1597243852214},{"path":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benpaul/Code/Projects/Atmos/src/Atmos.Web/ClientApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENhbGxUb0FjdGlvbiBmcm9tICIuLi9mcmFtZXdvcmsvQ2FsbFRvQWN0aW9uIjsKaW1wb3J0IE1peGVyQ2xpcCBmcm9tICIuL01peGVyQ2xpcCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWl4ZXIiLAogIGNvbXBvbmVudHM6IHsKICAgIE1peGVyQ2xpcDogTWl4ZXJDbGlwLAogICAgQ2FsbFRvQWN0aW9uOiBDYWxsVG9BY3Rpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VuZENsaXBzOiBbewogICAgICAgIGlkOiAiNCIsCiAgICAgICAgdGl0bGU6ICdSYWluJywKICAgICAgICBkZXNjcmlwdGlvbjogIkZhbGxpbmcgcmFpbiIsCiAgICAgICAgYXVkaW9Tb3VyY2VzOiBbJ3JhaW4ubXAzJ10sCiAgICAgICAgaWNvbjogcmVxdWlyZSgnLi4vLi4vYXNzZXRzL3JhaW4ucG5nJykKICAgICAgfSwgewogICAgICAgIGlkOiAiNSIsCiAgICAgICAgdGl0bGU6ICdXYXZlcycsCiAgICAgICAgZGVzY3JpcHRpb246ICJPY2VhbiBXYXZlcyIsCiAgICAgICAgYXVkaW9Tb3VyY2VzOiBbJ3dhdmVzLm1wMyddLAogICAgICAgIGljb246IHJlcXVpcmUoJy4uLy4uL2Fzc2V0cy93YXZlcy5wbmcnKQogICAgICB9LCB7CiAgICAgICAgaWQ6ICI2IiwKICAgICAgICB0aXRsZTogJ0JpcmRzJywKICAgICAgICBkZXNjcmlwdGlvbjogIkJpcmRzIiwKICAgICAgICBhdWRpb1NvdXJjZXM6IFsnYmlyZHMubXAzJ10sCiAgICAgICAgaWNvbjogcmVxdWlyZSgnLi4vLi4vYXNzZXRzL2JpcmRzLnBuZycpCiAgICAgIH0sIHsKICAgICAgICBpZDogIjciLAogICAgICAgIHRpdGxlOiAnV2luZCcsCiAgICAgICAgZGVzY3JpcHRpb246ICJCaXJkcyIsCiAgICAgICAgYXVkaW9Tb3VyY2VzOiBbJ3dpbmQubXAzJ10sCiAgICAgICAgaWNvbjogcmVxdWlyZSgnLi4vLi4vYXNzZXRzL3dpbmQucG5nJykKICAgICAgfSwgewogICAgICAgIGlkOiAiNyIsCiAgICAgICAgdGl0bGU6ICdUaHVuZGVyJywKICAgICAgICBkZXNjcmlwdGlvbjogIkJpcmRzIiwKICAgICAgICBhdWRpb1NvdXJjZXM6IFsndGh1bmRlci5tcDMnXSwKICAgICAgICBpY29uOiByZXF1aXJlKCcuLi8uLi9hc3NldHMvdGh1bmRlci5wbmcnKQogICAgICB9XSwKICAgICAgc2VsZWN0ZWRTb3VuZENsaXBzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU291bmRTZWxlY3RlZDogZnVuY3Rpb24gb25Tb3VuZFNlbGVjdGVkKHNvdW5kQ2xpcCkgewogICAgICBjb25zb2xlLmxvZygiU291bmQgc2VsZWN0ZWQgIiArIHNvdW5kQ2xpcC50aXRsZSk7CiAgICAgIHRoaXMuc2VsZWN0ZWRTb3VuZENsaXBzLnB1c2goc291bmRDbGlwKTsKICAgIH0sCiAgICBvblNvdW5kVW5zZWxlY3RlZDogZnVuY3Rpb24gb25Tb3VuZFVuc2VsZWN0ZWQoc291bmRDbGlwKSB7CiAgICAgIGNvbnNvbGUubG9nKCJTb3VuZCB1bnNlbGVjdGVkICIgKyBzb3VuZENsaXAudGl0bGUpOwogICAgICB0aGlzLnNlbGVjdGVkU291bmRDbGlwcyA9IHRoaXMuc2VsZWN0ZWRTb3VuZENsaXBzLmZpbHRlcihmdW5jdGlvbiAocykgewogICAgICAgIHJldHVybiBzLmlkICE9PSBzb3VuZENsaXAuaWQ7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Mixer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,OAAA,YAAA,MAAA,2BAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,WAAA,EAAA,cAHA;AAIA,QAAA,YAAA,EAAA,CAAA,UAAA,CAJA;AAKA,QAAA,IAAA,EAAA,OAAA,CAAA,uBAAA;AALA,OADA,EAQA;AACA,QAAA,EAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,OAFA;AAGA,QAAA,WAAA,EAAA,aAHA;AAIA,QAAA,YAAA,EAAA,CAAA,WAAA,CAJA;AAKA,QAAA,IAAA,EAAA,OAAA,CAAA,wBAAA;AALA,OARA,EAeA;AACA,QAAA,EAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,OAFA;AAGA,QAAA,WAAA,EAAA,OAHA;AAIA,QAAA,YAAA,EAAA,CAAA,WAAA,CAJA;AAKA,QAAA,IAAA,EAAA,OAAA,CAAA,wBAAA;AALA,OAfA,EAsBA;AACA,QAAA,EAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,WAAA,EAAA,OAHA;AAIA,QAAA,YAAA,EAAA,CAAA,UAAA,CAJA;AAKA,QAAA,IAAA,EAAA,OAAA,CAAA,uBAAA;AALA,OAtBA,EA6BA;AACA,QAAA,EAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,SAFA;AAGA,QAAA,WAAA,EAAA,OAHA;AAIA,QAAA,YAAA,EAAA,CAAA,aAAA,CAJA;AAKA,QAAA,IAAA,EAAA,OAAA,CAAA,0BAAA;AALA,OA7BA,CADA;AAsCA,MAAA,kBAAA,EAAA;AAtCA,KAAA;AAwCA,GA/CA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,eAAA,EAAA,yBAAA,SAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,oBAAA,SAAA,CAAA,KAAA;AACA,WAAA,kBAAA,CAAA,IAAA,CAAA,SAAA;AACA,KAJA;AAKA,IAAA,iBAAA,EAAA,2BAAA,SAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,sBAAA,SAAA,CAAA,KAAA;AACA,WAAA,kBAAA,GAAA,KAAA,kBAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,SAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA;AARA;AAhDA,CAAA","sourcesContent":["<template>\n    <section id=\"mixer\">\n        <div class=\"row\">\n            <div class=\"col-12\" id=\"sound-options\">\n                <CallToAction text=\"Try to mix and match the sounds\"></CallToAction>\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-4\" v-for=\"(item) in soundClips\" v-bind:key=\"item.id\">\n                        <MixerClip :title=\"item.title\" :description=\"item.description\" :sources=\"item.audioSources\" @playing=\"onSoundSelected(item)\" @stopped=\"onSoundUnselected(item)\" :icon=\"item.icon\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\n    import CallToAction from \"../framework/CallToAction\";\n    import MixerClip from \"./MixerClip\";\n    export default {\n        name: \"Mixer\",\n        components: {\n            MixerClip,\n            CallToAction\n        },\n        data() {\n            return {\n                soundClips: [\n                    {\n                        id: \"4\",\n                        title: 'Rain',\n                        description: \"Falling rain\",\n                        audioSources: ['rain.mp3'],\n                        icon: require('../../assets/rain.png')\n                    },\n                    {\n                        id: \"5\",\n                        title: 'Waves',\n                        description: \"Ocean Waves\",\n                        audioSources: ['waves.mp3'],\n                        icon: require('../../assets/waves.png')\n                    },\n                    {\n                        id: \"6\",\n                        title: 'Birds',\n                        description: \"Birds\",\n                        audioSources: ['birds.mp3'],\n                        icon: require('../../assets/birds.png')\n                    },\n                    {\n                        id: \"7\",\n                        title: 'Wind',\n                        description: \"Birds\",\n                        audioSources: ['wind.mp3'],\n                        icon: require('../../assets/wind.png')\n                    },\n                    {\n                        id: \"7\",\n                        title: 'Thunder',\n                        description: \"Birds\",\n                        audioSources: ['thunder.mp3'],\n                        icon: require('../../assets/thunder.png')\n                    },\n                ],\n                selectedSoundClips: [],\n            }\n        },\n        methods: {\n            onSoundSelected: function (soundClip) {\n                console.log(\"Sound selected \" + soundClip.title);\n                this.selectedSoundClips.push(soundClip);\n            },\n            onSoundUnselected: function (soundClip) {\n                console.log(\"Sound unselected \" + soundClip.title);\n                this.selectedSoundClips = this.selectedSoundClips.filter(s => s.id !== soundClip.id);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #mixer {\n        margin-bottom: 100px;\n    }\n</style>"],"sourceRoot":"src/components/mixer"}]}